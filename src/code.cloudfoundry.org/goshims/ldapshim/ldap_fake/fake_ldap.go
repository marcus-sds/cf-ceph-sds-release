// This file was generated by counterfeiter
package ldap_fake

import (
	"sync"

	"code.cloudfoundry.org/goshims/ldapshim"
	"gopkg.in/ldap.v2"
)

type FakeLdap struct {
	DialStub        func(network, addr string) (ldapshim.LdapConnection, error)
	dialMutex       sync.RWMutex
	dialArgsForCall []struct {
		network string
		addr    string
	}
	dialReturns struct {
		result1 ldapshim.LdapConnection
		result2 error
	}
	NewSearchRequestStub        func(string, int, int, int, int, bool, string, []string, []ldap.Control) *ldap.SearchRequest
	newSearchRequestMutex       sync.RWMutex
	newSearchRequestArgsForCall []struct {
		arg1 string
		arg2 int
		arg3 int
		arg4 int
		arg5 int
		arg6 bool
		arg7 string
		arg8 []string
		arg9 []ldap.Control
	}
	newSearchRequestReturns struct {
		result1 *ldap.SearchRequest
	}
}

func (fake *FakeLdap) Dial(network string, addr string) (ldapshim.LdapConnection, error) {
	fake.dialMutex.Lock()
	fake.dialArgsForCall = append(fake.dialArgsForCall, struct {
		network string
		addr    string
	}{network, addr})
	fake.dialMutex.Unlock()
	if fake.DialStub != nil {
		return fake.DialStub(network, addr)
	} else {
		return fake.dialReturns.result1, fake.dialReturns.result2
	}
}

func (fake *FakeLdap) DialCallCount() int {
	fake.dialMutex.RLock()
	defer fake.dialMutex.RUnlock()
	return len(fake.dialArgsForCall)
}

func (fake *FakeLdap) DialArgsForCall(i int) (string, string) {
	fake.dialMutex.RLock()
	defer fake.dialMutex.RUnlock()
	return fake.dialArgsForCall[i].network, fake.dialArgsForCall[i].addr
}

func (fake *FakeLdap) DialReturns(result1 ldapshim.LdapConnection, result2 error) {
	fake.DialStub = nil
	fake.dialReturns = struct {
		result1 ldapshim.LdapConnection
		result2 error
	}{result1, result2}
}

func (fake *FakeLdap) NewSearchRequest(arg1 string, arg2 int, arg3 int, arg4 int, arg5 int, arg6 bool, arg7 string, arg8 []string, arg9 []ldap.Control) *ldap.SearchRequest {
	fake.newSearchRequestMutex.Lock()
	fake.newSearchRequestArgsForCall = append(fake.newSearchRequestArgsForCall, struct {
		arg1 string
		arg2 int
		arg3 int
		arg4 int
		arg5 int
		arg6 bool
		arg7 string
		arg8 []string
		arg9 []ldap.Control
	}{arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9})
	fake.newSearchRequestMutex.Unlock()
	if fake.NewSearchRequestStub != nil {
		return fake.NewSearchRequestStub(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
	} else {
		return fake.newSearchRequestReturns.result1
	}
}

func (fake *FakeLdap) NewSearchRequestCallCount() int {
	fake.newSearchRequestMutex.RLock()
	defer fake.newSearchRequestMutex.RUnlock()
	return len(fake.newSearchRequestArgsForCall)
}

func (fake *FakeLdap) NewSearchRequestArgsForCall(i int) (string, int, int, int, int, bool, string, []string, []ldap.Control) {
	fake.newSearchRequestMutex.RLock()
	defer fake.newSearchRequestMutex.RUnlock()
	return fake.newSearchRequestArgsForCall[i].arg1, fake.newSearchRequestArgsForCall[i].arg2, fake.newSearchRequestArgsForCall[i].arg3, fake.newSearchRequestArgsForCall[i].arg4, fake.newSearchRequestArgsForCall[i].arg5, fake.newSearchRequestArgsForCall[i].arg6, fake.newSearchRequestArgsForCall[i].arg7, fake.newSearchRequestArgsForCall[i].arg8, fake.newSearchRequestArgsForCall[i].arg9
}

func (fake *FakeLdap) NewSearchRequestReturns(result1 *ldap.SearchRequest) {
	fake.NewSearchRequestStub = nil
	fake.newSearchRequestReturns = struct {
		result1 *ldap.SearchRequest
	}{result1}
}

var _ ldapshim.Ldap = new(FakeLdap)
