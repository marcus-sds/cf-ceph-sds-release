#!/bin/bash

set -e

scripts_path=./$(dirname $0)
eval $($scripts_path/get_paths.sh)

CEPH_ACCEPTANCE_DIR=$CEPHFS_RELEASE_DIR/src/code.cloudfoundry.org/cephdriver/acceptance/

# json encode the CEPH_KEYRING string since it is multiline and we will inject it into a json string
ENCODED_KEYRING=${CEPH_KEYRING//\\/\\\\} # \
ENCODED_KEYRING=${ENCODED_KEYRING//\//\\\/} # / 
ENCODED_KEYRING=${ENCODED_KEYRING//\'/\\\'} # ' (not strictly needed ?)
ENCODED_KEYRING=${ENCODED_KEYRING//\"/\\\"} # " 
ENCODED_KEYRING=${ENCODED_KEYRING//$'\t'/\\\t} # \t (tab)
ENCODED_KEYRING=${ENCODED_KEYRING//$'\n'/\\\n} # \n (newline)
ENCODED_KEYRING=${ENCODED_KEYRING//^M/\\\r} # \r (carriage return)
ENCODED_KEYRING=${ENCODED_KEYRING//^L/\\\f} # \f (form feed)
ENCODED_KEYRING=${ENCODED_KEYRING//^H/\\\b} # \b (backspace)

mkdir -p ~/voldriver_plugins
drivers_path=$(realpath ~/voldriver_plugins)

if [ "$TRANSPORT" == "tcp" ]
    then
        listen_address=0.0.0.0:9750
        driver_address=http://$listen_address
else
    listen_address=$drivers_path/cephdriver.sock
    driver_address=$drivers_path/cephdriver.sock
fi

echo "{
  \"volman_driver_path\": \"~/voldriver_plugins\",
  \"driver_address\": \"$driver_address\",
  \"driver_name\": \"cephdriver\",
  \"create_config\": {
    \"Name\": \"ceph-volume-name\",
    \"Opts\": {
      \"keyring\":\"$ENCODED_KEYRING\",
      \"ip\":\"$CEPH_CLUSTER_IP\",
      \"local_mount_point\":\"$CEPH_ACCEPTANCE_DIR/mountdir\",
      \"remote_mount_point\":\"/\"}
  }
} "  > $CEPHFS_RELEASE_DIR/src/code.cloudfoundry.org/cephdriver/acceptance/fixture.json

export FIXTURE_FILENAME="$CEPHFS_RELEASE_DIR/src/code.cloudfoundry.org/cephdriver/acceptance/fixture.json"

cd `dirname $0`
cd ../src/code.cloudfoundry.org/cephdriver

go build -o "acceptance/exec/cephdriver" "cmd/cephdriver/main.go"

go get -t code.cloudfoundry.org/volume_driver_cert

echo $listen_address
echo $drivers_path
/bin/bash acceptance/scripts/startdriver.sh $listen_address $drivers_path

pushd $CEPHFS_RELEASE_DIR/src/code.cloudfoundry.org/volume_driver_cert
    ginkgo
popd

/bin/bash acceptance/scripts/stopdriver.sh


rm acceptance/exec/cephdriver
